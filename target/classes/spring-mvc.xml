<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
	   http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-3.2.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">

    <!--0、spring mvc如果将dispatcherServlet拦截请求设置为/，那么访问静态资源的请求也会被当成普通请求
       dispatcherServlet默认是根据名称来进行处理，这样一来，请求静态资源的请求就被当成了普通后台控制的请求。
       spring mvc给出的解决方案还有一种静态资源映射来解决。此问题可能跟spring mvc版本有关。-->
    <mvc:default-servlet-handler/>

    <!--1.只扫描controller注解-->
    <mvc:annotation-driven></mvc:annotation-driven>
    <context:component-scan base-package="com.zhoubo.sconline.*" use-default-filters="false">
        <context:include-filter type="annotation"
                                expression="org.springframework.stereotype.Controller"></context:include-filter>
    </context:component-scan>
    <!--2.配置返回JSON-->
    <bean id="converterjson" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
    </bean>
    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
        <property name="messageConverters">
            <list>
                <ref bean="converterjson" />
            </list>
        </property>
    </bean>
    <!-- 3视图解析器 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!-- <property name="prefix" value="/WEB-INF/" /> 前缀-->
        <property name="suffix" value=".html" />
    </bean>
    <!--4.静态资源映射-->
    <!-- 静态资源映射  location是本地目录-->
    <!--<mvc:resources location="/page/" mapping="/page/**"/>
    <mvc:resources location="/img/" mapping="/img/**"/>-->
    <mvc:resources location="/css/" mapping="/css/**"/>
    <mvc:resources location="/js/" mapping="/js/**"/>

    <!--5文件上传下载处理-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="5000000"></property>
        <property name="defaultEncoding" value="UTF-8"/>
    </bean>

</beans>